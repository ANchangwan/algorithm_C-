#include<bits/stdc++.h>
using namespace std;  
#define V 104
int a[V][V], n,m, ret, visited[V][V];
const int dy[4] = {-1, 0 , 1, 0};
const int dx[4] = {0,1,0,-1}; 
void DFS(int y, int x){

    visited[y][x] = 1;
    for(int i = 0; i < 4; i++){
        int nx = x + dx[i];
        int ny = y + dy[i];
        if(nx >= m || nx < 0 || ny >= n || ny < 0 ) continue;
        if(visited[ny][ny]) continue;
        if(a[ny][nx] == 0) continue;
        DFS(ny,nx);
    }
    return;
}

int main(){
    cout.tie(NULL);
    cin.tie(NULL);
    cin >> n >> m;
    for(int i = 0; i < n; i++){
        for(int j= 0; i < m; j++){
            cin >> a[i][j];
        }
    }
    for(int i = 0; i < n; i++){
        for(int j= 0; i < m; j++){
            if(a[i][j] == 1 && !visited[i][j]) {
                ret++;
                DFS(i,j);
            }
        }
    }
    cout << ret << "\n";
    return 0;
}